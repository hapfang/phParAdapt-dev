June 2008 Min Zhou
in phParAdapt/trunk, merge the modification in braches/SCOREC from version 995 to 1021. Modification includes:

1)Make the code working with all scorec tools. The version of FMDB is 2321, the version of meshAdapt is 671 and version of phShape is 910. Give flag FMDB=1 when compile phShape and phParAdapt
2)add the feature of reordering DOF number and region numbers using RCM algorithm. (isReorder=0 is the default in file mdb2phasta.cc)
3) did some clean up, make only rank=0 print out progress information instead of every one print out
4) make it compile on blugene. (ARCHOS=ibm-bg)
5) fix file BCInflowFaceInfo.cc and commuBCInflowFaceInfo.cc

May 2007 JM
GEN_data.cc added to repository

April 2007 JM- JMR
Full update to MeshSim 6 and greater
Currently compiles and runs against
the latest 6.0 Version.
Due to current issues with periodicity
the code has not been tested against 6.1.

Also contains own implementations of
the GEN_attach data functions as these
are unsupported in MeshSim.
New tests from Joe including periodicity run;
but still  have to be included in the trunk.


March 2007 JM- JMR
This is work in progress on the trunk.
It contains changes to update
to MeshSim6.0
Also contains changes wrt to periodicity
and communication.
New tests from Joe including periodicity run;
but still  have to be included in this bracnch. 

Old repository test in
AdaptANDPreprocFixedMesh runs with limitations:
a) The parallel mesh directory (geom_P.sms) has to be amended
   by 
touch .sim_generated
b) the dumped partitioned mesh can not be visualized
   for some reason	

Visualizer for parallel meshes otherwise as of 3/7/2007 is 
/users/SCOREC/public/meshSim/PRE-SimAppS-1.2-060906/sun/SimUI/meshviewer
TAGGED as v2_3_1
9th Dec.'05 - OS

- Fixed memory leak in callback 
  (when no fresh entities are created, like, in collapse)
  (current version of Simmetrix libs. merge old ents. in some mesh mod. op.)

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES callback.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_3_0
7 Nov. 05 JM
Eventual deprecation of .h STL headers
has required to replace them with the proper
ones. Addn'l use of namespace std necessary.
Conflicts frequently reported for SGI
will be avoided this way.
Eventually, all existing C-files should be replaced
by C++ files to have a more consistent set of sources.
This has been done here for R_entities, R_entitiesBdry

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	BCInflowFaceInfo.cc CHANGES EnsaArrays.cc EssentialBC.cc 
CVS: 	EssentialBC.h InitialCondition.cc Input.cc Input.h 
CVS: 	InverseMap.cc Makefile NaturalBC.cc PeriodicBC.cc SPEBC.cc 
CVS: 	V_Hessian.cc allpart.cc assignGlobalVars.cc attachIBC.cc 
CVS: 	commuBCInflowFaceInfo.cc commuFix4SolutionTransfer.cc 
CVS: 	commuGradientsFromPatch.cc commuHessiansFromPatch.cc 
CVS: 	commuMaxLocalPartLocError.cc commuOldMeshSize.cc 
CVS: 	commuSmoothHessians.cc elementGradient.cc elementHessian.cc 
CVS: 	face_extraction.cc fix4SolutionTransfer.cc func.h genblock.cc 
CVS: 	getData.cc markingStrategy.cc maxLocalPartLocError.cc 
CVS: 	mdb2phasta.cc partMeshBypass.cc phParAdapt.h processError.cc 
CVS: 	processErrorAG.cc readErrorFiles.cc readErrorFromRestart.cc 
CVS: 	return_vertices.cc setIsotropicSizeField.cc 
CVS: 	setManualSizeField.cc setPeriodic.cc 
CVS: 	setSizeFieldUsingHessians.cc setup.cc 
CVS: 	transformToScalarErrorVal.cc writeEnsaFiles.cc 
CVS: 	writeMEDITHessians.cc writeRestartFiles.cc 
CVS: 	writeRestartHessians.cc 
CVS: 	test/AdaptANDPreprocFixedMesh/adapt.inp 
CVS: Added Files:
CVS: 	R_entities.cc R_entitiesBdry.cc 
CVS: Removed Files:
CVS: 	R_entities.c R_entitiesBdry.c 
CVS: ----------------------------------------------------------------------



TAGGED as v2_2_0
21st Sept.'05 - OS

- Fixed memory leak bug in callback with pPList "freshEnts" and "oldEnts"
  (delete these lists obtained from "mco")
- Fixed memory leak bug with data migration (for adapter and partitioner)
  (look for "CBdelete" in adapt.cc and partitionMeshToLBForAdaptivity.cc)
  (introduced delete callbacks - "delDblArray" and "delDbl" in callback.cc)
- Fixed memory leak bug in InterpolateSolution() with pPList "vrts"
  (list needs to be deleted)
- Introduced a check in callback to see if invoked for no successful mesh mod.
  (must be fixed with newer versions of Simmetrix libs.)
- Fixed memory leak bug in partitionMeshToLBForAdaptivity.cc
  (use - EN_deleteDataDbl() to delete double data attached with newRgnsID)

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES EnsaArrays.cc Input.h InterpolateSolution.cc adapt.cc 
CVS: 	callback.cc mdb2phasta.cc partitionMeshToLBForAdaptivity.cc 
CVS: 	phParAdapt.h setIsotropicSizeField.cc 
CVS: 	setSizeFieldUsingHessians.cc switchAdapt_Preproc.cc 
CVS: 	writeEnsaFiles.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_1_2
8th August'05 - OS

- Changed default option for predictive load balance part of phParAdapt to 0
  (i.e., under flag "preLBforAdaptivity")

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES Input.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_1_1
8th August'05 - OS

- Minor memory fix in adapt.cc for strategy 5 and 6
  changed this "double *error_indicator = new double[nvar];" to
  "double *error_indicator;"
- Modified "scalarValue" in transformToScalarErrorVal.cc to one double value
  (i.e., not an array; as during clean-up in adapt.cc 
   it is considered to be a single value)
- Minor clean up in assignGlobalVars.cc

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES adapt.cc assignGlobalVars.cc 
CVS: 	transformToScalarErrorVal.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_1_0
4th August'05 - OS

- Added 2 important/helpful features (for applying adaptivity on big cases):
  1) Predictive load balancing before mesh adaptation
     (load on each processor is estimated and distributed equally)
  2) Assigning master processor weight
     (introduced this to assign a lower wgt. to master proc. for big cases)
     (after mesh adaptation master proc. would have less mesh entities, hence
      the PMesh is again partitioned to distribute it equally for PHASTA)
  (both of the features turn out to be helpful for adaptivity on big cases,
   with millions of elements, using many processors)
- Introduced option 9 for size field constructed based on hessians
  (this option allows to set a scalar value for size equal to min. size 
   of the local mesh metric tensor)
- Fixed memory leak in transformToScalarErrorVal()
  (see, delete [] nodalErrorSet and VIter_delete(vIter))
- Fixed memory leak in callback function
  (in case of 1 old region (i.e., split operation) memory for new solution
   was allocated twice, i.e., in callback() and InterpolateSolution())
- Fixed memory leak problems in globalInfo.c and localInfo.c
  (see, "ncvec" in globalInfo.c and "req" and "stat" in localInfo.c)
- Fixed minor memory leak problems in switchAdapt_Preproc()
  (see, delete [] wght, AttCase_unassociate() and AMAN_delete())
- Fixed memory leak in setPeriodic.cc
  (see, PList_delete(gf_regions) and PList_delete(ml))
- Fixed memory leak problems in EnsaArray.cc
  (see, VIter_delete(vIter), EIter_delete(eIter) and FIter_delete(fIter))
- Removed external procSize() (from Simmetrix)
  (gives STRANGE problems on linux platforms)
- Introduced phParAdaptProcSize() (see, file procSize.cc)
  (this routine uses "ps" - report process status)
- Some cases do not have data attached with incorp (mesh data Id)
  (hence if no data is found appropriate one is being used
   see, attachIBC.cc  and writeNCorp.c)
- Removed extern for some parameters in assignGlobalVars.cc 
  (as they are defined here for the first time)
- Introduced nodesCount and nodesCountOnPartBdry in fix4SolutionTransfer()
  (for more info.)
- Moved info. on Simmetrix buildIDs to switchAdapt_Preproc() from adapt()
- Moved some Simmetrix start and stop function calls to main.cc
- Changed SIMARCH to x86_rhel3_gcc32 
  (as most linux machines on SCOREC have RHEL)

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES EnsaArrays.cc Input.cc Input.h InterpolateSolution.cc 
CVS: 	InverseMap.cc Makefile SmoothHessians.cc UserWeight.c adapt.cc 
CVS: 	assignGlobalVars.cc attachData.cc attachIBC.cc callback.cc 
CVS: 	ccfunc.h commuBCInflowFaceInfo.cc commuFix4SolutionTransfer.cc 
CVS: 	commuGradientsFromPatch.cc commuHessiansFromPatch.cc 
CVS: 	commuMaxLocalPartLocError.cc commuOldMeshSize.cc 
CVS: 	commuSmoothHessians.cc elementGradient.cc elementHessian.cc 
CVS: 	fix4SolutionTransfer.cc func.h getNSHGTOT.cc globalInfo.c 
CVS: 	gradientsFromPatch.cc hessiansFromPatch.cc lin2quad.cc 
CVS: 	localInfo.c main.cc markingStrategy.cc maxLocalPartLocError.cc 
CVS: 	mdb2phasta.cc phParAdapt.h phReadWrite.cc restart.cc 
CVS: 	setIsotropicSizeField.cc setPeriodic.cc 
CVS: 	setSizeFieldUsingHessians.cc switchAdapt_Preproc.cc 
CVS: 	transformToScalarErrorVal.cc writeMEDITHessians.cc 
CVS: 	writeNCorp.c writeRestartFiles.cc writeRestartHessians.cc 
CVS: Added Files:
CVS: 	partitionMeshToLBForAdaptivity.cc procSize.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_0_1
19th July'05 - OS

- Fixed  VIter_delete() in maxLocalPartLocError()
  (OLD bug which started to show up after last commit)
  (this was giving problems in construction of anisotropic sizefield)
- Fixed VIter_delete() in BCInflowFaceInfo()
  (this bug got-in in the last commit)
- Fixed delete [] dsend; delete [] drecv; in OLD commu<*>.cc (before v2_0_0)
- Minor fixes/changes in adapt.cc 

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	BCInflowFaceInfo.cc CHANGES adapt.cc 
CVS: 	commuGradientsFromPatch.cc commuHessiansFromPatch.cc 
CVS: 	commuMaxLocalPartLocError.cc commuSmoothHessians.cc 
CVS: 	hessiansFromSolution.cc maxLocalPartLocError.cc 
CVS: 	setSizeFieldUsingHessians.cc 
CVS: ----------------------------------------------------------------------



TAGGED as v2_0_0
18th July'05 - OS

- Communication setup in case of isotropic sizefield
  global error info. and old mesh sizes are communicated
- Changed callback.c to callback.cc with some memory fixes 
  memory associated with solution on vertices to be deleted is deallocated
  introduced a counter to keep track of instantiation of callback function
- Introduced timing statistics for sizefield driven strategies
  samples are collected for all major routines and some minor ones
- Introduced capability to output partitioned mesh classified on a model face
  in a single (vtk) file (need this to generate bct file from aspire)
  (check : BCInflowFace and BCInflowFaceTag)  
- Apply many passes in fix4SolutionTransfer()
  communicate solution if fix4NodesOnSurface() created nodes on part. bdry.
- Data attached as error indicators are cleaned/deleted before mesh adaptation
- Minor changes in Makefile (removed Solution from dependency)
  use "/import/users/$(USER)/develop" as DEVROOT on medusa
- Modified attachData.cc to get attached array on mesh ents. into a global one
- Modified phReadWrite.cc to append field data in restart files
- Output anisotropic sizefield in medit format for each partition
  (check : writeMEDITSizeField() in writeMEDITHessians.cc)
- Some minor memory fixes for pMeshDataId, pAttachDataCommu etc.
- Print more info. like Simmetrix Build IDs; 
  number of nodes with hmin, hmax and both for anisotropic sizefield;
  total/global number of nodes and elements (before and after adaptation) etc.
- Commented out some print messages for DEBUG cases

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES Makefile MeshSimInternal.h R_entities.c 
CVS: 	R_entitiesBdry.c SmoothHessians.cc adapt.cc 
CVS: 	assignGlobalVars.cc attachData.cc attachData.h 
CVS: 	commuGradientsFromPatch.cc commuHessiansFromPatch.cc 
CVS: 	commuMaxLocalPartLocError.cc commuSmoothHessians.cc 
CVS: 	elementGradient.cc elementHessian.cc fix4SolutionTransfer.cc 
CVS: 	gradientsFromPatch.cc hessiansFromPatch.cc 
CVS: 	hessiansFromSolution.cc main.cc maxLocalPartLocError.cc 
CVS: 	mdb2phasta.cc partMeshBypass.cc phParAdapt.h phReadWrite.cc 
CVS: 	restart.cc setIsotropicSizeField.cc 
CVS: 	setSizeFieldUsingHessians.cc switchAdapt_Preproc.cc 
CVS: Added Files:
CVS: 	BCInflowFaceInfo.cc callback.cc commuBCInflowFaceInfo.cc 
CVS: 	commuFix4SolutionTransfer.cc commuOldMeshSize.cc 
CVS: 	writeMEDITHessians.cc 
CVS: Removed Files:
CVS: 	callback.c 
CVS: ----------------------------------------------------------------------



Completing test case
Preproc/
CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES 
CVS: Added Files:
CVS: 	test/Preproc/adapt.inp test/Preproc/goliath 
CVS: ----------------------------------------------------------------------


Removing old invalid test case
AdaptANDPreproc/
tagged as v1_3_0

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES 
CVS: Removed Files:
CVS: 	test/AdaptANDPreproc/JMWedge.xmt_txt 
CVS: 	test/AdaptANDPreproc/geomNOIC.spj 
CVS: 	test/AdaptANDPreproc/restart.20.1 
CVS: 	test/AdaptANDPreproc/restart.20.2 
CVS: 	test/AdaptANDPreproc/Results/graph.out.1 
CVS: 	test/AdaptANDPreproc/Results/graph.out.2 
CVS: 	test/AdaptANDPreproc/Results/info.out.1 
CVS: 	test/AdaptANDPreproc/Results/info.out.2 
CVS: 	test/AdaptANDPreproc/Results/numpe.in 
CVS: 	test/AdaptANDPreproc/Results/numstart.dat 
CVS: 	test/AdaptANDPreproc/Results/refined_p.1.sms 
CVS: 	test/AdaptANDPreproc/Results/refined_p.2.sms 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/connect0.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/connect1.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/data0-0.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/data1-0.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/geombc.dat.1 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/geombc.dat.2 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/header-0.dx 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/header-series.dx 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/numpe.in 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/numstart.dat 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/partition0.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/partition1.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/points0.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/points1.tex 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/restart.0.1 
CVS: 	test/AdaptANDPreproc/Results/2-procs_case/restart.0.2 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/nump 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/smd 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/smi 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/sms 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/sms.1 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/spb 
CVS: 	test/AdaptANDPreproc/Results/refined_p.sms/spb.1 
CVS: 	test/AdaptANDPreproc/geom_p.sms/ncrptmp.1 
CVS: 	test/AdaptANDPreproc/geom_p.sms/ncrptmp.2 
CVS: 	test/AdaptANDPreproc/geom_p.sms/nump 
CVS: 	test/AdaptANDPreproc/geom_p.sms/smd 
CVS: 	test/AdaptANDPreproc/geom_p.sms/smi 
CVS: 	test/AdaptANDPreproc/geom_p.sms/sms 
CVS: 	test/AdaptANDPreproc/geom_p.sms/sms.1 
CVS: 	test/AdaptANDPreproc/geom_p.sms/spb 
CVS: 	test/AdaptANDPreproc/geom_p.sms/spb.1 
CVS: ----------------------------------------------------------------------



adding the new test case:
AdaptANDPreprocFixedMesh/

CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	CHANGES 
CVS: Added Files:
CVS: 	test/AdaptANDPreprocFixedMesh/JMWedge.xmt_txt 
CVS: 	test/AdaptANDPreprocFixedMesh/adapt.inp 
CVS: 	test/AdaptANDPreprocFixedMesh/geomNOIC.spj 
CVS: 	test/AdaptANDPreprocFixedMesh/goliath 
CVS: 	test/AdaptANDPreprocFixedMesh/restart.20.1 
CVS: 	test/AdaptANDPreprocFixedMesh/restart.20.2 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/graph.out.1 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/graph.out.2 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.1.sms 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.2.sms 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/restart.1111.1 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/restart.1111.2 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/geombc.dat.1 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/geombc.dat.2 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/numpe.in 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/numstart.dat 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/restart.20.1 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/2-procs_case/restart.20.2 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/nump 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/smd 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/smi 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/sms 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/sms.1 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/spb 
CVS: 	test/AdaptANDPreprocFixedMesh/Results/20/refined_p.sms/spb.1 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/ncrptmp.1 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/ncrptmp.2 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/nump 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/smd 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/smi 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/sms 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/sms.1 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/spb 
CVS: 	test/AdaptANDPreprocFixedMesh/geom_p.sms/spb.1 
CVS: ----------------------------------------------------------------------


CVS: ----------------------------------------------------------------------
CVS: Enter Log.  Lines beginning with `CVS:' are removed automatically
CVS: 
CVS: Committing in .
CVS: 
CVS: Modified Files:
CVS: 	phasta/phParAdapt//phParAdapt/CHANGES 
CVS: 	phasta/phParAdapt//phParAdapt/EnsaArrays.cc 
CVS: 	phasta/phParAdapt//phParAdapt/InitialCondition.cc 
CVS: 	phasta/phParAdapt//phParAdapt/InterpolateSolution.cc 
CVS: 	phasta/phParAdapt//phParAdapt/InverseMap.cc 
CVS: 	phasta/phParAdapt//phParAdapt/Makefile 
CVS: 	phasta/phParAdapt//phParAdapt/MeshSimInternal.h 
CVS: 	phasta/phParAdapt//phParAdapt/R_entities.c 
CVS: 	phasta/phParAdapt//phParAdapt/R_entitiesAdapt.cc 
CVS: 	phasta/phParAdapt//phParAdapt/R_entitiesBdry.c 
CVS: 	phasta/phParAdapt//phParAdapt/adapt.cc 
CVS: 	phasta/phParAdapt//phParAdapt/allpart.cc 
CVS: 	phasta/phParAdapt//phParAdapt/attachIBC.cc 
CVS: 	phasta/phParAdapt//phParAdapt/callback.c 
CVS: 	phasta/phParAdapt//phParAdapt/ccfunc.h 
CVS: 	phasta/phParAdapt//phParAdapt/func.h 
CVS: 	phasta/phParAdapt//phParAdapt/genILWork.c 
CVS: 	phasta/phParAdapt//phParAdapt/getData.cc 
CVS: 	phasta/phParAdapt//phParAdapt/getNSHGTOT.cc 
CVS: 	phasta/phParAdapt//phParAdapt/globalInfo.c 
CVS: 	phasta/phParAdapt//phParAdapt/localInfo.c 
CVS: 	phasta/phParAdapt//phParAdapt/main.cc 
CVS: 	phasta/phParAdapt//phParAdapt/markingStrategy.cc 
CVS: 	phasta/phParAdapt//phParAdapt/mdb2phasta.cc 
CVS: 	phasta/phParAdapt//phParAdapt/parallel.h 
CVS: 	phasta/phParAdapt//phParAdapt/partMeshBypass.cc 
CVS: 	phasta/phParAdapt//phParAdapt/partitionMesh.cc 
CVS: 	phasta/phParAdapt//phParAdapt/printBC.cc 
CVS: 	phasta/phParAdapt//phParAdapt/printInfo.c 
CVS: 	phasta/phParAdapt//phParAdapt/procArgs.c 
CVS: 	phasta/phParAdapt//phParAdapt/readBC.cc 
CVS: 	phasta/phParAdapt//phParAdapt/readErrorFiles.cc 
CVS: 	phasta/phParAdapt//phParAdapt/readErrorFromRestart.cc 
CVS: 	phasta/phParAdapt//phParAdapt/restart.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setPeriodic.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setup.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setupGlobalTasks.c 
CVS: 	phasta/phParAdapt//phParAdapt/sureToContinue.c 
CVS: 	phasta/phParAdapt//phParAdapt/switchAdapt_Preproc.cc 
CVS: 	phasta/phParAdapt//phParAdapt/writeEnsaFiles.cc 
CVS: 	phasta/phParAdapt//phParAdapt/writeNCorp.c 
CVS: 	phasta/phParAdapt//phParAdapt/writeRestartFiles.cc 
CVS: 	phasta/phParAdapt//phParAdapt/test/README 
CVS: Added Files:
CVS: 	phasta/phParAdapt//phParAdapt/Eigen.cc 
CVS: 	phasta/phParAdapt//phParAdapt/Eigen.h 
CVS: 	phasta/phParAdapt//phParAdapt/Input.cc 
CVS: 	phasta/phParAdapt//phParAdapt/Input.h 
CVS: 	phasta/phParAdapt//phParAdapt/SmoothErrorIndicators.cc 
CVS: 	phasta/phParAdapt//phParAdapt/SmoothHessians.cc 
CVS: 	phasta/phParAdapt//phParAdapt/V_Hessian.cc 
CVS: 	phasta/phParAdapt//phParAdapt/assignGlobalVars.cc 
CVS: 	phasta/phParAdapt//phParAdapt/attachData.cc 
CVS: 	phasta/phParAdapt//phParAdapt/attachData.h 
CVS: 	phasta/phParAdapt//phParAdapt/buildSystem.cc 
CVS: 	phasta/phParAdapt//phParAdapt/commuGradientsFromPatch.cc 
CVS: 	phasta/phParAdapt//phParAdapt/commuHessiansFromPatch.cc 
CVS: 	phasta/phParAdapt//phParAdapt/commuMaxLocalPartLocError.cc 
CVS: 	phasta/phParAdapt//phParAdapt/commuSmoothHessians.cc 
CVS: 	phasta/phParAdapt//phParAdapt/elementGradient.cc 
CVS: 	phasta/phParAdapt//phParAdapt/elementHessian.cc 
CVS: 	phasta/phParAdapt//phParAdapt/fix4SolutionTransfer.cc 
CVS: 	phasta/phParAdapt//phParAdapt/gradientsFromPatch.cc 
CVS: 	phasta/phParAdapt//phParAdapt/hessiansFromPatch.cc 
CVS: 	phasta/phParAdapt//phParAdapt/hessiansFromSolution.cc 
CVS: 	phasta/phParAdapt//phParAdapt/maxLocalPartLocError.cc 
CVS: 	phasta/phParAdapt//phParAdapt/phParAdapt.h 
CVS: 	phasta/phParAdapt//phParAdapt/phReadWrite.cc 
CVS: 	phasta/phParAdapt//phParAdapt/phReadWrite.h 
CVS: 	phasta/phParAdapt//phParAdapt/processErrorAG.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setIsotropicSizeField.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setManualSizeField.cc 
CVS: 	phasta/phParAdapt//phParAdapt/setSizeFieldUsingHessians.cc 
CVS: 	phasta/phParAdapt//phParAdapt/tagEntitiesForRefinement.cc 
CVS: 	phasta/phParAdapt//phParAdapt/transformToScalarErrorVal.cc 
CVS: 	phasta/phParAdapt//phParAdapt/writeRestartHessians.cc 
CVS: Removed Files:
CVS: 	phasta/phParAdapt//phParAdapt/F_exists.c 
CVS: 	phasta/phParAdapt//phParAdapt/SolutionCallback.c 
CVS: 	phasta/phParAdapt//phParAdapt/adaptFunctions.h 
CVS: 	phasta/phParAdapt//phParAdapt/assignNewGlobalNodeId.cc 
CVS: 	phasta/phParAdapt//phParAdapt/readAttachSolution.cc 
CVS: ----------------------------------------------------------------------


+++	4/6/05
	the bottom of this files contains the development log
	of this module (phParAdapt) prior to this update
	it might become useful once similar issues arise

+++	comments on the functionality of the files:
	(in the order they got removed(r)/added(a))
	---------------------------------------------
a	CHANGES:
	~~~~~~~~
	was added recently. Was not created at intial cvs
	setup of module

a	Eigen.cc/Eigen.h
	~~~~~~~~~~~~~~~~~
	X. Li Eigen-routines from an earlier phAdapt
	(these should be replaced at one point by the more stable
	sun eigen-routines)

r	F_exists.c
	~~~~~~~~~~~
	the previous (local) implementation was removed
	now only using the internal MeshSim implementation

a	Input.cc/Input.h
	~~~~~~~~~~~~~~~~
	parses the new input   file "adapt.inp"

a	SmoothErrorIndicators.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~
	currently not used

a	SmoothHessians.cc
	~~~~~~~~~~~~~~~~~
	simple average of nodal Hessian over a patch surrounding the vertex	
	
r	SolutionCallback.c
	~~~~~~~~~~~~~~~~~~
	removed. Replaced by callback.c

a	V_Hessian.cc
	~~~~~~~~~~~~~
	just retrieving nodal values
	attached via nodalHessianID

r	adaptFunctions.h
	~~~~~~~~~~~~~~~~~
	removed.
	replaced by phParAdapt.h	
	
a	assignGlobalVars.cc 
	~~~~~~~~~~~~~~~~~~~
	most input parameters have global scope.
	Assignement is here from the input parser

r	assignNewGlobalNodeId.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~
	removed. This was an attempt to carry the array
	"ncorp" (mapping of local-to-partition node numbers to global)
	through the adaptation procedure.
	This was finally abandonned in view of the flexibility
	of the new visualization tools phViewPara and paraView
	One issue remains:
	tools like planePlot, linePlot won't properly work
	if applied to partitions only
	
a	attachData.cc/attachData.h
	~~~~~~~~~~~~~~~~~~~~~~~~~~~
	attaches/removes an arry to mesh entities.
	Wrapper around MeshSim functions

a	buildSystem.cc 
	~~~~~~~~~~~~~~~~~~~~~~~~~~~
	the linear 4x4 system setup for the reconstruction of
	linear polynoms (gradients and hessians)

a	commuGradientsFromPatch.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~
	Once the element gradients have been reconstructed
	the have to be communicated accross partition boundaries.
	This is needed when the vertex at which a field is to be reconstructed
	is on a partition boundary.
	All off-proc/off-part contributions have to be communicated then.

	This function also serves as a prototype for tools that require
	parallel communication of attached data using the mesh data base.

a	commuHessiansFromPatch.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~	
	similar to commuGradientsFromPatch.cc.
	
a	commuMaxLocalPartLocError.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	similar to commuGradientsFromPatch.cc.
	commu of local (on-proc/part) nodal maximum values
	
a	commuSmoothHessians.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	similar to commuGradientsFromPatch.cc.
	Involves patch based operation.
	Some care has to be taken at partition bdries
	that also lie on the model boundary

a	elementGradient.cc  
	~~~~~~~~~~~~~~~~~~~
	reconstructs element gradient based on nodal solution

a	elementHessian.cc
	~~~~~~~~~~~~~~~~~~~
	similar as elementGradient.cc 

		
a	fix4SolutionTransfer.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~
	fix for MeshSim's fix4NodesOnSurface


a	gradientsFromPatch.cc 
	~~~~~~~~~~~~~~~~~~~~~
	patch averaging to reconstruct nodal gradients

	
a	hessiansFromPatch.cc 
	~~~~~~~~~~~~~~~~~~~~
	similar as gradientsFromPatch.cc 

a	hessiansFromSolution.cc
	~~~~~~~~~~~~~~~~~~~~~~~~
	Wrapper around the hessian reconstruction
	starting with gradients.
	Includes commu.

a	maxLocalPartLocError.cc
	~~~~~~~~~~~~~~~~~~~~~~~~
	Maximum interpolation error at a vertex
	LOCAL to a partition. Commu required for nodes
	on part bdry (done in commuMaxLocalPartLocError).

a	phParAdapt.h 
	~~~~~~~~~~~~
	header replacing adaptFunctions.h

a	phReadWrite.cc/phReadWrite.h
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	Wrapper around phastaIO routines.
	Replaces readAttachSolution.cc 
	
a	processErrorAG.cc 
	~~~~~~~~~~~~~~~~~
	postprocessing of (restart) error fields
	needed by Azat

	
r	readAttachSolution.cc 	
	~~~~~~~~~~~~~~~~~~~~~
	removed. Replaced by phReadWrite.cc/phReadWrite.h

a	setIsotropicSizeField.cc 
	~~~~~~~~~~~~~~~~~~~~~~~~~
	setting isotropic sizefield based on error information

a	setManualSizeField.cc   
	~~~~~~~~~~~~~~~~~~~~~~~~~
	setting manual sizefield

a	setSizeFieldUsingHessians.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	using nodal hessian values attached via nodalHessianID


a	tagEntitiesForRefinement.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	wrapper around marking strategy	

a	transformToScalarErrorVal.cc
	~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	since isotropic/tag driven adaptivity requires scalar
	value, any error information that is NOT scalar has to be transformed.
	It's up to each user to define his own conversion function
	which will be called in here.

a	writeRestartHessians.cc  
	~~~~~~~~~~~~~~~~~~~~~~~
	writing hessians in restart format.
	wrapper around writeArrayToFile




+++	4/5/05
	added/deletet files:
.../phParAdapt/phParAdapt/ ...t/phParAdapt_Pre040829/
----------------------------------------------------
files that		   files that 
are removed		   are added
----------------------------------------------------

CHANGES                    ---                       
---                        Eigen.cc                  
---                        Eigen.h                   
F_exists.c                 ---                       
---                        Input.cc                  
---                        Input.h                   
---                        SmoothErrorIndicators.cc  
---                        SmoothHessians.cc         
SolutionCallback.c         ---                       
---                        V_Hessian.cc              
adaptFunctions.h           ---                       
---                        assignGlobalVars.cc       
assignNewGlobalNodeId.cc   ---                       
---                        attachData.cc             
---                        attachData.h              
---                        buildSystem.cc            
---                        commuGradientsFromPatch.cc
---                        commuHessiansFromPatch.cc
---                        commuMaxLocalPartLocError.cc
---                        commuSmoothHessians.cc    
---                        elementGradient.cc        
---                        elementHessian.cc         
---                        fix4SolutionTransfer.cc   
---                        gradientsFromPatch.cc     
---                        hessiansFromPatch.cc      
---                        hessiansFromSolution.cc   
---                        maxLocalPartLocError.cc   
---                        phParAdapt.h              
---                        phReadWrite.cc            
---                        phReadWrite.h             
---                        processErrorAG.cc         
readAttachSolution.cc      ---                       
---                        setIsotropicSizeField.cc  
---                        setManualSizeField.cc     
---                        setSizeFieldUsingHessians.cc
---                        tagEntitiesForRefinement.cc
---                        transformToScalarErrorVal.cc
---                        writeRestartHessians.cc   
	

===	development log 9/7/04-4/1/05
	=============================
+++ 	9/7/04
	development with 040829 Pre-release of Simmetrix
	parallel adaptive sizefield driven


+++	issues:


+++	mpi.h has to be included

+++	pUPartitioner is missing, previously in SimPMesh.h
	pUPartitioner replaced by pPartitioner ???
	phParAdapt actually does not use partitioning
	when compiled with 040829 Pre-release it hopefully can 
	read partitioned meshes that were created by a previous
	meshSim version

+++	change of function names like 
	PMU_start()

+++	SimUtil missing: use the one from release
	5.3-040830/

+++	ticket response: functions in SimModel

+++	functions missing:
	PMU_commuArr
	PMU_commuInt

+++	own implementation according tp ticket
	SimTicketID-5394-A26417 : "PMesh Progress"
	PMU_utility.c
	declared in parallel.h

+++	9/14/04
	compile with Pre040829
	fails to run in AdaptANDPreproc
	fails to run in Preproc:

	Current function is getX
	   37       V_coord(vertex, x[dof++]);
	(/usr/local/SUNWspro/6.0u2/SUNWspro/bin/../WS6U2/bin/sparcv9/dbx) where
	current thread: t@1
	  [1] V_coord(0x9fb578, 0x0, 0x7eb5b4, 0x0, 0x7f7f18, 0x9efaa8), at 0x3dbd88
	=>[2] getX(mesh = 0x9eeab0, x = 0x9dcf78), line 37 in "getData.cc"
	  [3] writeEnsaFiles(pmesh = 0x9dd098, info = 0x9d7cd0, bdry = 0x9dfe68), 
	line 167 in "writeEnsaFiles.cc"
	  [4] mdb2phasta(fname = 0xffbeea6c "geom.spj", mname = 0xffbeea08 "geom_p.sms", 
	model = 0x917058, pmesh = 0x9dd098, nshgTot = 83), line 374 in "mdb2phasta.cc"
	  [5] switchAdapt_Preproc(argc = 2, argv = 0xffbeec94), line 143 in "switchAdapt_Preproc.cc"
	  [6] main(argc = 2, argv = 0xffbeec94), line 104 in "main.cc"

+++	V_coord() is OK, could be some allocation issue with  x[dof++]


+++	9/14/04
	phParAdapt compiles and runs with pre-release  Pre040829

+++	9/15/04
	Implementation of sizefield driven adaptivity:
	use the framework of (serial) phAdapt

	PROTOCOL of changes/issues:
	* input file instead of command line args
	* attachable data IDs:
	  old	new
	nodalSolutionID 	phasta_solution

+++	activating only strategies 3,4,5,6

+++	have to replace "option" by global variables
	tag-driven "option" -->

+++	10/14/04
	aniso size field
	
+++	interior patch grads OK (==> elem grads OK) NOOOOOOOOOO!!!!!

	DEBUG: wedge, fixed mesh
	vertex 0.000000 0.000000 0.100000
	(correct) patch gradient: -7.496066 6.895773 -1.025781 
	

+++ 	10/19/04
	for vertex 
	coords -0.020040 0.014444 0.067330
	element grads OK
	patch grads NOT OK !!!!!!		

+++	attaching of of vol and local pre-patch grads is OK
	since for all interior nodes the patch grad values are OK

+++	10/25/04
    	At this moment we cannnot decide whether a vertex' neighbors are
    	exclusively on the bdry --> also look at adjacent partitions
    	for now, we rely that the initial mesh hase been prepared and got 
    	all its bdry-only elements removed	

+++	11/01/04
	the sizefield computed here goes through in a debug version
	/users/jmueller/develop/Meshing/PMeshSimTest/TestPMSimAdapt
	only using basic MeshSim functions
	here is also fails even when callback is omitted

	check the data deletion 
	MD_deleteMeshDataId
	and 
	cleanAttachedData --> bug is there!
	fixed by using deleteData instead of modifyData

+++	set 
	$MESHSIM ='/users/SCOREC/public/meshSim/PRE-040923/main-040923/'

+++	12/10/04
	again issues with hang up

	issue solved by replacing F_exists by the one from NSpre2/3.6.4

+++	2/1/05
	linking to MESHSIM 5.4...
	running on medusa: don't forget to set in main():

        putenv("PARASOLID=/usr/local/parasolid/16.0");
    	putenv("P_LIST=/usr/local/parasolid/16.0/lispdata");
    	putenv("P_SCHEMA=/usr/local/parasolid/16.0/schema");

+++	4/1/05
	this README is going into "CHANGES"

	test cases:
	/users/jmueller/develop/phasta/phParAdapt/phParAdapt_Pre040829/test/AdaptANDPreprocFixedMesh
	will replace  the old AdaptANDPreproc
	now, an input file is required
	the test case is an aniso adaptive for the stationary temp field
	and requires adaptOption=2 and strategy =1

	will contain fixes for nodes on surface as well as fixes for the solution transfer for the fixed
	nodes

	F_exists implementation will be removed:  MeshSim internal  only will be used instead


	

+++	4/1/05
	creating this "CHANGES" file
	tagging this version
	v1_0_0
	
CVS: Added Files:
CVS: 	CHANGES 
CVS: ----------------------------------------------------------------------

