/* This file provides interface functions for 'partial ' random 
   access into the PHASTA input files 

   Anil Karanam March 2001 */

#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdlib.h>
#include <time.h>
#include "phastaIO.h"

#ifdef intel
#include <winsock2.h>
#else
#include <unistd.h>
#include <strings.h>
#endif

void 
write_restart(  int stepno, 
                int nshg, 
                int numVars,
                double* array1, 
                double* array2 ) {

    char fname[255];
    char rfile[60];
    char existingfile[30], linkfile[30];
    int irstou;
    int sizeofarray = nshg*numVars;
    int magic_number = 362436;
    int* mptr = &magic_number;
    time_t timenow = time ( &timenow);
    double version=0.0;
    int isize, nitems;
    int iarray[10];

    sprintf(rfile,"restart.fine.%d",stepno);
    openfile_(rfile,"write", &irstou);

    /* writing the top ascii header for the restart file */

    writestring_( &irstou,"# PHASTA Solution File Version 2.0\n");
    writestring_( &irstou, "# format \"keyphrase : sizeofnextblock usual headers\"\n");

    bzero( (void*)fname, 255 );
    sprintf(fname,"# Output generated by M2M3D version (NOT YET CURRENT): %lf \n", version);
    writestring_( &irstou, fname );

    bzero( (void*)fname, 255 );
    sprintf(fname,"# %s\n", ctime( &timenow ));
    writestring_( &irstou, fname );

    isize = 1;
    nitems = 1;
    iarray[ 0 ] = 1;
    writeheader_( &irstou, "byteorder magic number ", 
                  (void*)iarray, &nitems, &isize, "integer", "binary" );
    
    nitems = 1;
    writedatablock_( &irstou, "byteorder magic number ",
                     (void*)mptr, &nitems, "integer", "binary" );
    
    
    bzero( (void*)fname, 255 );
    sprintf(fname,"number of modes : < 0 > %d\n", nshg);
    writestring_( &irstou, fname );
    
    bzero( (void*)fname, 255 );
    sprintf(fname,"number of variables : < 0 > %d\n", numVars);
    writestring_( &irstou, fname );
        
    
    isize = nshg*numVars;
    nitems = 3;
    iarray[ 0 ] = nshg;
    iarray[ 1 ] = numVars;
    iarray[ 2 ] = stepno;
    writeheader_( &irstou, "solution ", 
                  (void*)iarray, &nitems, &isize, "double", "binary" );
    
        
    nitems = nshg*numVars;
    writedatablock_( &irstou, "solution ",
                     (void*)(array1), &nitems, "double", "binary" );
        
   

    if ( array2 ) {
        nitems = 3;
        writeheader_( &irstou, "time derivative of solution ", 
                      (void*)iarray, &nitems, &isize, "double", "binary" );
    
    
        nitems = nshg*numVars;
        writedatablock_( &irstou, "time derivative of solution ",
                         (void*)(array2), &nitems, "double", "binary" );

    }
    closefile_( &irstou, "write" );
}
